{"version":3,"file":"static/js/313.566f8010.chunk.js","mappings":"2MAsBA,UAjBA,SAAe,GAAqB,IAApBA,EAAK,EAALA,MAAOC,EAAS,EAATA,UACfC,GAAMC,EAAAA,EAAAA,UACZ,GAAiBC,EAAAA,EAAAA,WAAS,kBAAMC,EAAAA,GAAgB,IAAIC,aAAa,MAAQ,CAAEC,OAAQ,KAAM,IAAlFC,GAAmF,YAA7E,GAKb,OAJAC,EAAAA,EAAAA,IAAS,SAACC,EAAOC,GACfT,EAAIU,QAAQC,SAASC,GAAKH,EAAQ,GAClCT,EAAIU,QAAQC,SAASE,GAAKJ,EAAQ,EACpC,KAEE,kBAAOE,SAAU,CAAC,EAAG,EAAGG,KAAKC,GAAK,GAAG,UACnC,SAAC,MAAM,gBAACf,IAAKA,EAAKgB,UAAWV,EAAQW,OAAQ,EAAGC,eAAe,GAAWpB,GAAK,cAC7E,SAAC,IAAa,CAACqB,aAAW,EAACC,MAAOrB,EAAWsB,KAAM,IAAOC,iBAAiB,EAAMC,YAAY,QAIrG,C","sources":["components/Stars.js"],"sourcesContent":["import { useState, useRef } from 'react'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport { Points, PointMaterial } from '@react-three/drei'\r\nimport * as random from 'maath/random/dist/maath-random.esm'\r\n\r\nfunction Stars({props, starColor}) {\r\n  const ref = useRef()\r\n  const [sphere] = useState(() => random.inSphere(new Float32Array(15000), { radius: 9.5 }))\r\n  useFrame((state, delta) => {\r\n    ref.current.rotation.x -= delta / 20\r\n    ref.current.rotation.y -= delta / 20\r\n  })\r\n  return (\r\n    <group rotation={[0, 0, Math.PI / 4]}>\r\n      <Points ref={ref} positions={sphere} stride={3} frustumCulled={false} {...props}>\r\n        <PointMaterial transparent color={starColor} size={0.020} sizeAttenuation={true} depthWrite={false} />\r\n      </Points>\r\n    </group>\r\n  )\r\n}\r\n\r\n\r\nexport default Stars\r\n"],"names":["props","starColor","ref","useRef","useState","random","Float32Array","radius","sphere","useFrame","state","delta","current","rotation","x","y","Math","PI","positions","stride","frustumCulled","transparent","color","size","sizeAttenuation","depthWrite"],"sourceRoot":""}